// Mocks generated by Mockito 5.0.9 from annotations
// in flutter_test_login/test/widget/login/login_widget_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i7;

import 'package:flutter_test_login/domain/entities/user/user_entity.dart'
    as _i4;
import 'package:flutter_test_login/domain/use_case/auth/sign_in.dart' as _i2;
import 'package:flutter_test_login/domain/use_case/auth/sign_out.dart' as _i5;
import 'package:flutter_test_login/domain/use_case/user/get_user.dart' as _i3;
import 'package:flutter_test_login/presentation/app/controller/app_controller.dart'
    as _i8;
import 'package:flutter_test_login/presentation/login/controller/login_controller.dart'
    as _i6;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: comment_references
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeSignIn extends _i1.Fake implements _i2.SignIn {}

class _FakeGetUser extends _i1.Fake implements _i3.GetUser {}

class _FakeUserEntity extends _i1.Fake implements _i4.UserEntity {}

class _FakeSignOut extends _i1.Fake implements _i5.SignOut {}

/// A class which mocks [LoginController].
///
/// See the documentation for Mockito's code generation for more information.
class MockLoginController extends _i1.Mock implements _i6.LoginController {
  MockLoginController() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.SignIn get signInUseCase =>
      (super.noSuchMethod(Invocation.getter(#signInUseCase),
          returnValue: _FakeSignIn()) as _i2.SignIn);
  @override
  _i3.GetUser get getUserUseCase =>
      (super.noSuchMethod(Invocation.getter(#getUserUseCase),
          returnValue: _FakeGetUser()) as _i3.GetUser);
  @override
  _i7.Future<String> login({String? email, String? password}) =>
      (super.noSuchMethod(
          Invocation.method(#login, [], {#email: email, #password: password}),
          returnValue: Future<String>.value('')) as _i7.Future<String>);
  @override
  _i7.Future<_i4.UserEntity> getUser(String? uid) =>
      (super.noSuchMethod(Invocation.method(#getUser, [uid]),
              returnValue: Future<_i4.UserEntity>.value(_FakeUserEntity()))
          as _i7.Future<_i4.UserEntity>);
}

/// A class which mocks [AppController].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppController extends _i1.Mock implements _i8.AppController {
  MockAppController() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.SignOut get signOutUseCase =>
      (super.noSuchMethod(Invocation.getter(#signOutUseCase),
          returnValue: _FakeSignOut()) as _i5.SignOut);
  @override
  set user(_i4.UserEntity? _user) =>
      super.noSuchMethod(Invocation.setter(#user, _user),
          returnValueForMissingStub: null);
  @override
  dynamic setUser(_i4.UserEntity? value) =>
      super.noSuchMethod(Invocation.method(#setUser, [value]));
  @override
  _i7.Future<void> signOut() =>
      (super.noSuchMethod(Invocation.method(#signOut, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i7.Future<void>);
}
